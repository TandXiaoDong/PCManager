<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:convert="clr-namespace:ShikuIM.Converter" xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:localbase="clr-namespace:ShikuIM" xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:model="clr-namespace:ShikuIM.Model"
    xmlns:usercontrols="clr-namespace:ShikuIM.UserControls" mc:Ignorable="d">


    <!--  所有窗口加载动画  -->
    <Storyboard x:Key="WindowOnLoad">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="window" Storyboard.TargetProperty="Opacity">
            <EasingDoubleKeyFrame KeyTime="0" Value="0" />
            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="1" />
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>
    <!--#region 去掉令人愉悦的点击涟漪动画反馈-->
    <Style BasedOn="{StaticResource MaterialDesignRaisedAccentButton}" TargetType="Button">
        <Setter Property="materialDesign:RippleAssist.IsDisabled" Value="True" />
    </Style>
    <Style BasedOn="{StaticResource MaterialDesignMenuItem}" TargetType="MenuItem">
        <Setter Property="materialDesign:RippleAssist.IsDisabled" Value="True" />
        <!--<Setter Property="Margin" Value="0 4"/>-->
    </Style>
    <!--#endregion-->

    <Style BasedOn="{StaticResource NullFocusStyle}" TargetType="FrameworkElement" />

    <Style x:Key="NullFocusStyle" TargetType="FrameworkElement">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    </Style>

    <!--  local="clr-namespace:ShikuIM.ResourceDictionaries"  -->
    <!--  消息列表卡片项样式  -->
    <Style x:Key="MessageTabItemStyle" TargetType="{x:Type TabItem}">
        <!--<Setter Property="Margin" Value="0"/>-->
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Background" Value="{DynamicResource MaterialDesignBody}" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="Width" Value="70" />
        <Setter Property="Height" Value="70" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                        <Border
                            x:Name="mainBorder"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="0">
                            <Border x:Name="innerBorder" BorderThickness="0" />
                        </Border>
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                            VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                            ContentSource="Header" Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--
                        目前暂时未能实现动画
                        <EventTrigger SourceName="contentPresenter" RoutedEvent="UIElement.MouseLeave">
                            <BeginStoryboard x:Name="OnMouseLeave1_BeginStoryboard"
                                             Storyboard="{StaticResource OnMouseLeave1}"/>
                        </EventTrigger>
                        <EventTrigger SourceName="contentPresenter" RoutedEvent="UIElement.MouseEnter">
                            <BeginStoryboard x:Name="OnMouseEnter1_BeginStoryboard"
                                             Storyboard="{StaticResource OnMouseEnter1}"/>
                        </EventTrigger>
                        -->
                        <Trigger Property="IsSelected" Value="True">
                            <!--<Setter TargetName="bd_Left" Property="Height" Value="70"  />-->
                        </Trigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="#AA5E8288" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left" />
                            </MultiDataTrigger.Conditions>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="#DD5E8288" />
                            <!--<Setter TargetName="Icon" Property="Kind" Value="Account" />-->
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left" />
                            </MultiDataTrigger.Conditions>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <!--  消息选项卡列表样式  -->
    <Style x:Key="MessageTabControlStyle" TargetType="{x:Type TabControl}">
        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid
                        x:Name="templateRoot" ClipToBounds="true"
                        KeyboardNavigation.TabNavigation="Local" SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0" />
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto" />
                            <RowDefinition x:Name="RowDefinition1" Height="*" />
                        </Grid.RowDefinitions>
                        <TabPanel
                            x:Name="headerPanel" Grid.Row="0"
                            Grid.Column="0" Margin="0,35,0,0"
                            Panel.ZIndex="1" IsItemsHost="true"
                            KeyboardNavigation.TabIndex="1" />
                        <Border
                            x:Name="contentPanel" Grid.Row="1"
                            Grid.Column="0"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="0" KeyboardNavigation.DirectionalNavigation="Contained"
                            KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter
                                x:Name="PART_SelectedContentHost" ContentSource="SelectedContent"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter TargetName="headerPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="contentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="headerPanel" Property="Grid.Column" Value="0" />
                            <Setter TargetName="contentPanel" Property="Grid.Column" Value="1" />
                            <Setter TargetName="ColumnDefinition0" Property="Width" Value="Auto" />
                            <Setter TargetName="ColumnDefinition1" Property="Width" Value="*" />
                            <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
                            <!--                            <Setter Property="Margin" TargetName="headerPanel" Value="2,2,0,2"/>-->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  好友项模板  -->
    <DataTemplate x:Key="MessageItem" DataType="{x:Type model:MessageListItem}">
        <!--  ListBoxItem内容  -->
        <Grid
            x:Name="gd_item" Height="58"
            Margin="0" HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            Visibility="{Binding IsVisibility, Converter={StaticResource BoolToVisiblityConverter}, TargetNullValue=Visible, FallbackValue=Visible}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="56" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="4" />
            </Grid.ColumnDefinitions>
            <!--  头像  -->
            <materialDesign:Badged
                Grid.Column="0" Width="40"
                Height="40" Margin="8"
                Padding="0" HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Badge="{Binding UnReadCount, Converter={StaticResource NoticeCountConverter}, ConverterParameter=Tag}"
                BadgeBackground="#F44336" BadgeForeground="White"
                FocusVisualStyle="{StaticResource NullFocusStyle}">
                <!--<Border HorizontalAlignment="Center" VerticalAlignment="Center">-->
                <Ellipse
                    x:Name="bd_ico" Width="40"
                    Height="40" RenderOptions.BitmapScalingMode="LowQuality">
                    <Ellipse.Fill>
                        <ImageBrush ImageSource="{Binding Avator, Converter={StaticResource LocalUrlToImageConverter}}" />
                    </Ellipse.Fill>
                </Ellipse>
                <!--</Border>-->
            </materialDesign:Badged>
            <!--  内容  -->
            <StackPanel
                Grid.Column="1" Margin="0"
                VerticalAlignment="Center">
                <!--  标题文字  -->
                <TextBlock
                    x:Name="lbl_title" MaxWidth="150"
                    Margin="0,0,0,3" HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Style="{DynamicResource MaterialDesignSubheadingTextBlock}"
                    Text="{Binding ShowTitle}"
                    TextTrimming="WordEllipsis"
                    ToolTip="{Binding MessageTitle}" />
                <!--  内容文字  -->
                <localbase:EmojiTextBlock
                    x:Name="tbl_content" Width="112"
                    Height="auto" MaxWidth="163"
                    MaxHeight="20" HorizontalAlignment="Left"
                    VerticalAlignment="Center" FontFamily="Microsoft YaHei"
                    FontSize="13" Foreground="#000"
                    SnapsToDevicePixels="True"
                    Text="{Binding Msg, Converter={StaticResource MsgToFixedConverter}}"
                    TextTrim="CharacterEllipsis"
                    Visibility="{Binding MessageItemContent, Converter={StaticResource ItemContentToVisibleConverter}}" />
            </StackPanel>
            <!--  时间  -->
            <TextBlock
                x:Name="tbl_time" Grid.Column="2"
                Width="Auto" Height="14"
                Margin="10,16" Padding="0"
                HorizontalAlignment="Right" VerticalAlignment="Top"
                FontSize="13" Foreground="#90909090"
                Text="555" />
            <!--  分割线  -->
            <Separator
                Height="0.4" Margin="56,0,0,0"
                VerticalAlignment="Bottom" Opacity="0.08"
                Visibility="{Binding ElementName=tbl_content, Path=Visibility}" />
        </Grid>

        <!--  ListBoxItem内容结束  -->
    </DataTemplate>
    <!--  支持虚拟化的ItemsControl样式  -->
    <Style x:Key="VirtualListBox" TargetType="{x:Type ItemsControl}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True" />
        <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling" />
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
    </Style>

    <!--  好友选择项自定义样式  -->
    <Style x:Key="MemberListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource PrimaryHueLightForegroundBrush}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border>
                        <!--  ListBoxItem内容  -->
                        <Grid>
                            <Border
                                x:Name="MouseOverBorder" Background="Transparent"
                                Opacity="0" />
                            <!--  Background="{TemplateBinding Foreground, Converter={StaticResource BrushRoundConverter}}"  -->
                            <Border
                                x:Name="SelectedBackgroundBorder" Background="#CDCDCD"
                                Opacity="0" />
                            <Grid
                                x:Name="gd_item" Height="48"
                                Margin="0" HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch" Background="#00000000">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="64" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="56" />
                                </Grid.ColumnDefinitions>
                                <!--  头像  -->
                                <Border
                                    Grid.Column="0" Width="36"
                                    Height="36" Margin="8,0,0,0"
                                    HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Border.Effect>
                                        <DropShadowEffect
                                            BlurRadius="5" Opacity="0.2"
                                            ShadowDepth="0.4" Color="Black" />
                                    </Border.Effect>
                                    <Ellipse x:Name="bd_ico" RenderOptions.BitmapScalingMode="HighQuality">
                                        <Ellipse.Fill>
                                            <ImageBrush ImageSource="{Binding Avator, Converter={StaticResource LocalUrlToImageConverter}}" />
                                        </Ellipse.Fill>
                                    </Ellipse>
                                </Border>
                                <!--  内容  -->
                                <StackPanel
                                    Grid.Column="1" Margin="0"
                                    VerticalAlignment="Center">
                                    <!--  标题文字  -->
                                    <TextBlock
                                        x:Name="lbl_title" Height="auto"
                                        MaxWidth="112" Margin="0,0,0,3"
                                        Padding="0" HorizontalAlignment="Left"
                                        VerticalAlignment="Center" FontFamily="Microsoft YaHei"
                                        FontSize="13" Foreground="#000000"
                                        Text="{Binding ShowTitle}"
                                        TextTrimming="CharacterEllipsis"
                                        ToolTip="{Binding MessageTitle}"
                                        UseLayoutRounding="False" />
                                </StackPanel>
                                <Border Grid.Column="2" Background="#00000000" />
                                <CheckBox
                                    x:Name="cb_Check" Grid.Column="2"
                                    HorizontalAlignment="Center" VerticalAlignment="Center"
                                    Cursor="Hand"
                                    IsChecked="{TemplateBinding IsSelected}" />

                            </Grid>
                            <Border
                                x:Name="SelectedBorder" BorderBrush="Gray"
                                BorderThickness="0" Opacity="0"
                                Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ListBox}, Path=SelectionMode, Converter={StaticResource EqualsToVisibilityConverter}, ConverterParameter={x:Static SelectionMode.Extended}, Mode=OneWay, FallbackValue=Hidden}" />
                        </Grid>
                        <!--  ListBoxItem内容结束  -->
                        <!--  状态组集合  -->
                        <VisualStateManager.VisualStateGroups>
                            <!--  单个状态组  -->
                            <VisualStateGroup Name="CommonStates">
                                <!--  状态切换动画  -->
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1" To="Normal">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CircleEase EasingMode="EaseOut" />
                                        </VisualTransition.GeneratedEasingFunction>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="MouseOverBorder" Storyboard.TargetProperty="Opacity"
                                            To="0.03" Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup Name="SelectionStates">
                                <VisualStateGroup.Transitions>
                                    <!--  选中时动画  -->
                                    <VisualTransition From="*" To="Selected">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SelectedBackgroundBorder" Storyboard.TargetProperty="Opacity">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                    <!--  未选中时动画  -->
                                    <VisualTransition From="*" To="SelectedUnfocused">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SelectedBackgroundBorder" Storyboard.TargetProperty="Opacity">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.3" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                    <!--  从选中切换到未选中时动画  -->
                                    <VisualTransition From="Selected" To="Unselected">
                                        <Storyboard>
                                            <DoubleAnimation
                                                Storyboard.TargetName="SelectedBackgroundBorder" Storyboard.TargetProperty="Opacity"
                                                To="0" Duration="0:0:0.08" />
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="SelectedBackgroundBorder" Storyboard.TargetProperty="Opacity"
                                            To="1" Duration="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="SelectedBorder" Storyboard.TargetProperty="Opacity"
                                            To="1" Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Unselected" />
                                <VisualState Name="SelectedUnfocused">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="SelectedBackgroundBorder" Storyboard.TargetProperty="Opacity"
                                            To="1" Duration="0:0:0.08" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="SelectedBorder" Storyboard.TargetProperty="Opacity"
                                            To="1" Duration="0:0:0.08" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="OnChecked1">
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="MouseOverBorder" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame KeyTime="0:0:0.2" Value="#FFC0C0C0" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="cb_Check" Property="IsChecked" Value="True">
                            <Setter Property="IsSelected" Value="True" />
                        </Trigger>
                        <Trigger SourceName="cb_Check" Property="IsChecked" Value="False">
                            <Setter Property="IsSelected" Value="False" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value=".56" />
                        </Trigger>
                        <!--<EventTrigger SourceName="cb_Check" RoutedEvent="CheckBox.Checked"   >
                            <BeginStoryboard Storyboard="{StaticResource OnChecked1}" />
                        </EventTrigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  群成员选择项自定义样式  -->
    <Style x:Key="GroupMemberListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Foreground" Value="{StaticResource PrimaryHueLightForegroundBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border>
                        <!--  ListBoxItem内容  -->
                        <Grid>
                            <Border
                                x:Name="MouseOverBorder" Background="Transparent"
                                Opacity="0" />
                            <!--  Background="{TemplateBinding Foreground, Converter={StaticResource BrushRoundConverter}}"  -->
                            <Border
                                x:Name="SelectedBackgroundBorder" Background="#CDCDCD"
                                Opacity="0" />
                            <Grid
                                x:Name="gd_item" Height="48"
                                Margin="0" HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch" Background="#00000000">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="64" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="36" />
                                </Grid.ColumnDefinitions>
                                <!--  头像  -->
                                <Border
                                    Grid.Column="0" Width="36"
                                    Height="36" Margin="8,0,0,0"
                                    HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Border.Effect>
                                        <DropShadowEffect
                                            BlurRadius="5" Opacity="0.2"
                                            ShadowDepth="0.4" Color="Black" />
                                    </Border.Effect>
                                    <Ellipse x:Name="bd_ico" RenderOptions.BitmapScalingMode="HighQuality">
                                        <Ellipse.Fill>
                                            <ImageBrush ImageSource="{Binding Avator, Converter={StaticResource LocalUrlToImageConverter}}" />
                                        </Ellipse.Fill>
                                    </Ellipse>
                                </Border>
                                <!--  内容  -->
                                <StackPanel
                                    Grid.Column="1" Margin="0"
                                    VerticalAlignment="Center">
                                    <!--  标题文字  -->
                                    <TextBlock
                                        x:Name="lbl_title" Height="auto"
                                        Margin="0,0,0,3" Padding="0"
                                        HorizontalAlignment="Left" VerticalAlignment="Center"
                                        FontFamily="Microsoft YaHei" FontSize="13"
                                        Foreground="#000000"
                                        Text="{Binding ShowTitle}"
                                        TextTrimming="CharacterEllipsis"
                                        ToolTip="{Binding MessageTitle}"
                                        UseLayoutRounding="False" />
                                </StackPanel>
                                <Border Grid.Column="2" Background="#00000000" />
                                <CheckBox
                                    x:Name="cb_Check" Grid.Column="2"
                                    HorizontalAlignment="Center" VerticalAlignment="Center"
                                    Cursor="Hand"
                                    IsChecked="{TemplateBinding IsSelected}" />

                            </Grid>
                            <Border
                                x:Name="SelectedBorder" BorderBrush="Gray"
                                BorderThickness="0" Opacity="0"
                                Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ListBox}, Path=SelectionMode, Converter={StaticResource EqualsToVisibilityConverter}, ConverterParameter={x:Static SelectionMode.Extended}, Mode=OneWay, FallbackValue=Hidden}" />
                        </Grid>
                        <!--  ListBoxItem内容结束  -->
                        <!--  状态组集合  -->
                        <VisualStateManager.VisualStateGroups>
                            <!--  单个状态组  -->
                            <VisualStateGroup Name="CommonStates">
                                <!--  状态切换动画  -->
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.3" To="Normal">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CircleEase EasingMode="EaseOut" />
                                        </VisualTransition.GeneratedEasingFunction>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="MouseOverBorder" Storyboard.TargetProperty="Opacity"
                                            To="0.03" Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup Name="SelectionStates">
                                <VisualStateGroup.Transitions>
                                    <!--  选中时动画  -->
                                    <VisualTransition From="*" To="Selected">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SelectedBackgroundBorder" Storyboard.TargetProperty="Opacity">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                    <!--  未选中时动画  -->
                                    <VisualTransition From="*" To="SelectedUnfocused">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SelectedBackgroundBorder" Storyboard.TargetProperty="Opacity">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.6" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                    <!--  从选中切换到未选中时动画  -->
                                    <VisualTransition From="Selected" To="Unselected">
                                        <Storyboard>
                                            <DoubleAnimation
                                                Storyboard.TargetName="SelectedBackgroundBorder" Storyboard.TargetProperty="Opacity"
                                                To="0" Duration="0:0:0.1" />
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="SelectedBackgroundBorder" Storyboard.TargetProperty="Opacity"
                                            To="1" Duration="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="SelectedBorder" Storyboard.TargetProperty="Opacity"
                                            To="1" Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Unselected" />
                                <VisualState Name="SelectedUnfocused">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="SelectedBackgroundBorder" Storyboard.TargetProperty="Opacity"
                                            To="1" Duration="0:0:0.1" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="SelectedBorder" Storyboard.TargetProperty="Opacity"
                                            To="1" Duration="0:0:0.1" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="OnChecked1">
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="MouseOverBorder" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame KeyTime="0:0:0.2" Value="#FFC0C0C0" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="cb_Check" Property="IsChecked" Value="True">
                            <Setter Property="IsSelected" Value="True" />
                        </Trigger>
                        <Trigger SourceName="cb_Check" Property="IsChecked" Value="False">
                            <Setter Property="IsSelected" Value="False" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value=".56" />
                        </Trigger>
                        <!--<EventTrigger SourceName="cb_Check" RoutedEvent="CheckBox.Checked"   >
                            <BeginStoryboard Storyboard="{StaticResource OnChecked1}" />
                        </EventTrigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
